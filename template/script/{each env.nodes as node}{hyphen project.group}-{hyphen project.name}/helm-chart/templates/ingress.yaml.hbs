{{#define "app_name"}}{{hyphen project.group}}-{{hyphen project.name}}{{/define}}

{{={{{ }}}=}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{{app_name}}}-ingress
  annotations:
    {{- if .Values.uses_ingress_native_implementation }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    {{- else }}
    nginx.ingress.kubernetes.io/rewrite-target: $1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: nginx
    {{- end }}
    {{- if .Values.certificate.enabled }}
    kubernetes.io/ingress.global-static-ip-name: {{{app_name}}}-ip
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    {{- end }}
spec:
  {{- if .Values.certificate.enabled }}
  tls:
  - secretName: {{ .Values.domain }}-tls
    hosts:
    - {{ .Values.domain }}
  {{- end }}
  rules:
    {{- if .Values.local }}
    - http:
    {{- else }}
    - host: {{ .Values.domain }}
      http:
    {{- end }}
        paths:
        {{{#each clients as |client|}}}
        {{- with $it := .Values.clients.{{{lower-camel client.identifier}}} }}
        {{- if and $it.enabled $it.basePath }}
        - path: {{ $it.basePath }}
          backend:
            serviceName: {{{hyphen client.identifier}}}-pwa
            servicePort: {{ $it.port }}
        {{- end }}
        {{- end }}
        {{{/each}}}

        {{{#each services as |service|}}}
        {{- with $it := .Values.services.{{{lower-camel service.identifier}}} }}
        {{- if and $it.enabled $it.basePath }}
        - path: {{ $it.basePath }}
          backend:
            serviceName: {{{hyphen service.identifier}}}-api
            servicePort: {{ $it.port }}
        {{- end }}
        {{- end }}
        {{{/each}}}
